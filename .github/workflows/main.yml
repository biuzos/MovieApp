# This is a basic workflow

name: CI

#Controls when the action will run.
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  #Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Generate API Key properties file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > /home/runner/work/MovieApp/MovieApp/apikey.properties
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties
          echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
            name: lint.html
            path: app/build/reports/lint-results-debug.html

  unit-test:
      needs: [ lint ]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v2

        - name: Set up JDK 17
          uses: actions/setup-java@v2
          with:
            java-version: 17
            distribution: 'adopt'

        - name: Generate API Key properties file
          run: |
            echo "API_KEY=${{ secrets.API_KEY }}" > /home/runner/work/MovieApp/MovieApp/apikey.properties
            echo "BASE_URL=${{ secrets.BASE_URL }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties
            echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties

        - name: Run unit tests
          run: ./gradlew testDebugUnitTest

        - name: Upload test report
          uses: actions/upload-artifact@v2
          with:
            name: unit_test_report
            path: ./*/build/reports/tests/testDebugUnitTest/

  kover-test:
    needs: [ unit-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Generate API Key properties file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > /home/runner/work/MovieApp/MovieApp/apikey.properties
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties
          echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties

      - name: Run kover tests
        run: ./gradlew koverHtmlReportDebug

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: kover_test_report
          path: ./*/build/reports/kover/htmlDebug/index.html

  instrumentation-test:
        needs: [ kover-test]
        runs-on: macos-latest
        steps:
          - name: Checkout the code
            uses: actions/checkout@v3

          - name: Set up JDK 17
            uses: actions/setup-java@v3
            with:
              java-version: 17
              distribution: 'adopt'
              check-latest: true

          - name:  Grant execute permission for gradlew
            run: chmod +x gradlew

          - name: Enable KVM
            run: |
              echo 'KERNEL=="kvm",GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc//udev/rules.d/99-kvm4all.rules
              sudo udevadm control  --reload-rules
              sudo udevadm trigger --name-match-kvm

          - name: Generate API Key properties file
            run: |
              echo "API_KEY=${{ secrets.API_KEY }}" > /Users/runner/work/MovieApp/MovieApp/apikey.properties
              echo "BASE_URL=${{ secrets.BASE_URL }}" >> /Users/runner/work/MovieApp/MovieApp/apikey.properties
              echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /Users/runner/work/MovieApp/MovieApp/apikey.properties


          - name: Run espresso tests
            uses: ReactiveCircus/android-emulator-runner@v2
            with:
              api-level: 29
              target: google_apis
              arch: x86_64
              profile: Nexus 6
              script: ./gradlew connectedCheck

          - name: Upload test report
            uses: actions/upload-artifact@v2
            with:
              name: instrumentation_test_report
              path: ./*/build/reports/androidTests/connected/#

  static-code-analysis:
    needs: [ instrumentation-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Generate API Key properties file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > /home/runner/work/MovieApp/MovieApp/apikey.properties
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties
          echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties
          

      - name: SonarCloud Scan
        run: ./gradlew sonarqube -D sonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
      needs: [ static-code-analysis ]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v2

        - name: Set up JDK 17
          uses: actions/setup-java@v2
          with:
            java-version: 17
            distribution: 'adopt'

        - name: Generate API Key properties file
          run: |
            echo "API_KEY=${{ secrets.API_KEY }}" > /home/runner/work/MovieApp/MovieApp/apikey.properties
            echo "BASE_URL=${{ secrets.BASE_URL }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties
            echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties

        - name: Build debug apk
          run: ./gradlew assembleDebug

        - name: Upload apk
          uses: actions/upload-artifact@v2
          with:
            name: movie-app.apk
            path: app/build/outputs/apk/debug/app-debug.apk
