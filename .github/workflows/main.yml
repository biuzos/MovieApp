# This is a basic workflow

name: CI

#Controls when the action will run.
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  #Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      #      - name: Generate API Key properties file
      #        run: |
      #          echo "API_KEY=${{ secrets.API_KEY }}" > /home/runner/work/MovieApp/MovieApp/apikey.properties
      #          echo "BASE_URL=${{ secrets.BASE_URL }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties
      #          echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties


      - name: Run Lint
        run: echo Run Lint

  #      - name: Upload html test report
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: lint.html
  #          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      #      - name: Generate API Key properties file
      #        run: |
      #          echo "API_KEY=${{ secrets.API_KEY }}" > /home/runner/work/MovieApp/MovieApp/apikey.properties
      #          echo "BASE_URL=${{ secrets.BASE_URL }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties
      #          echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties

      - name: Run tests
        run: echo Run Tests

  #      - name: Upload test report
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: unit_test_report
  #          path: ./*/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [ unit-test ]
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      #      - name: Generate API Key properties file
      #        run: |
      #          echo "API_KEY=${{ secrets.API_KEY }}" > /Users/runner/work/MovieApp/MovieApp/apikey.properties
      #          echo "BASE_URL=${{ secrets.BASE_URL }}" >> /Users/runner/work/MovieApp/MovieApp/apikey.properties
      #          echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /Users/runner/work/MovieApp/MovieApp/apikey.properties

      - name: Run Espresso tests
        run: echo Run Espresso Tests
  #      - name: Run espresso tests
  #        uses: reactivecircus/android-emulator-runner@v2
  #        with:
  #          api-level: 29
  #          script: ./gradlew connectedCheck

  #      - name: Upload test report
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: instrumentation_test_report
  #          path: ./*/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [ instrumentation-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Generate API Key properties file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > /home/runner/work/MovieApp/MovieApp/apikey.properties
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties
          echo "BASE_URL_IMAGE=${{ secrets.BASE_URL_IMAGE }}" >> /home/runner/work/MovieApp/MovieApp/apikey.properties

      #new one
      - name: SonarCloud Scan
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}








